name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request_target:
    branches: [master]
    types:
      - closed

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: github.event.pull_request.merged == true || github.event.pusher != null
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYY'}}
      - name: Build and push Docker images
        id: image
        uses: docker/build-push-action@v6.18.0
        with:
          platforms: linux/amd64,linux/arm64
          pull: false
          push: ${{ github.event.pull_request.merged == true || github.event.pusher != null }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Trigger security scan
        if: github.event.pull_request.merged == true || github.event.pusher != null
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: security-scan
          client-payload: |
            {
              "image_digest": "${{ steps.image.outputs.digest }}",
              "image_repo": "ghcr.io/${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "actor": "${{ github.actor }}",
              "run_id": "${{ github.run_id }}",
              "branch_name": "${{ github.ref_name }}",
              "repository": "${{ github.repository }}",
              "timestamp": "${{ github.event.head_commit.timestamp || github.event.pull_request.merged_at }}"
            }
